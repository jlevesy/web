version: '3'

networks:
  web:
    driver: bridge
  back:
    driver: bridge

volumes:
  db: ~
  tls: ~

services:
  lb:
    restart: always
    build: images/traefik
    ports:
      - 80:80
      - 8080:8080
      - 443:443
    command: [
      "--configFile=/etc/traefik/traefik.toml"
    ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/traefik.toml:/etc/traefik/traefik.toml
      - tls:/etc/traefik
    networks:
      - web
  home:
    restart: always
    build:
      context: images/home
    networks:
      - web
    labels:
      - "traefik.port=80"
      - "traefik.backend=home"
      - "traefik.frontend.rule=Host:julienlevesy.net"
  resume:
    restart: always
    build:
      context: images/resume
    networks:
      - web
    labels:
      - "traefik.port=80"
      - "traefik.backend=resume"
      - "traefik.frontend.rule=Host:me.julienlevesy.net"

  readstack:
    image: readstack
    restart: always
    networks:
      - web
      - back
    environment:
      - READSTACK_POSTGRES_URL=postgres://${DBUSER}:${DBPASSWORD}@db:5432/readstack?sslmode=disable
      - READSTACK_LISTEN_PORT=80
      - READSTACK_HANDLER_TIMEOUT=200ms
      - READSTACK_WEB_ASSETS_PATH=dist/web
    labels:
      - "traefik.port=80"
      - "traefik.backend=stack"
      - "traefik.frontend.rule=Host:stack.julienlevesy.net"

  db:
    image: rotschopf/rpi-postgres
    restart: always
    environment:
      - POSTGRES_USER=${DBUSER}
      - POSTGRES_PASSWORD=${DBPASSWORD}
      - POSTGRES_DB=readstack
    volumes:
        - db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    labels:
      - "traefik.enable=false"
    networks:
      - back

  # talks:
  #   build:
  #     context: images/talks
  #   networks:
  #     - web
  #   labels:
  #     - "traefik.port=80"
  #     - "traefik.backend=talks"
  #     - "traefik.frontend.rule=Host:talks.julienlevesy.net"
