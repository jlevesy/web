---

- name: install necessary packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - python-pip
    - python-dev

- name: install python necessary libraries
  pip:
    name: "{{ item }}"
  with_items:
    - setuptools
    - pyOpenSSL
    - cryptography

- name: create required directories
  file:
    state: directory
    path: "{{ item }}"
  with_items:
    - /etc/ssl/public
    - /etc/ssl/csr
    - /etc/ssl/certs
    - /etc/ssl/ca
    - /etc/systemd/system/docker.service.d/

- name: generating CA private key
  openssl_privatekey:
    path: /etc/ssl/private/docker-ca-key.pem
    passphrase: "{{ docker_ca_key_passphrase }}"
    cipher: aes256
  register: ca_key

- name: generating CA
  command: |
    openssl req -new -x509 -days 365
      -key {{ ca_key.filename }}
      -passin pass:{{docker_ca_key_passphrase}}
      -subj "/C=FR/ST=RH/L=Lyon/O=mecorp/OU=IT Department/CN={{ domain }}"
      -sha256 -out /etc/ssl/ca/docker-ca.pem

- name: generating server private key
  openssl_privatekey:
    path: /etc/ssl/private/docker-server-key.pem
  register: server_key

- name: generating server CSR
  openssl_csr:
    path: /etc/ssl/csr/docker-server.csr
    privatekey_path: "{{ server_key.filename }}"
    commonName: "{{ domain }}"
    subjectAltName: "DNS:{{ domain }}"
  register: server_csr

- name: self signing server public key
  command: |
    openssl x509 -req -days 365 -sha256
      -in {{ server_csr.filename }}
      -CA /etc/ssl/ca/docker-ca.pem
      -CAkey {{ ca_key.filename }}
      -extensions "DNS:{{ domain}}"
      -passin pass:{{ docker_ca_key_passphrase }}
      -CAcreateserial
      -out /etc/ssl/certs/docker-server-cert.pem


- name: uploading client CSR
  copy:
    src: "{{ docker_client_tls_path }}client.csr"
    dest: /etc/ssl/csr/docker-client-csr.csr
  register: client_csr

- name: generating client certificate
  command: |
    openssl x509 -req -days 365 -sha256
    -in {{ client_csr.dest }}
    -CA /etc/ssl/ca/docker-ca.pem
    -CAkey {{ ca_key.filename }}
    -extensions "extendedKeyUsage = clientAuth"
    -passin pass:{{ docker_ca_key_passphrase }}
    -CAcreateserial
    -out /etc/ssl/certs/docker-client-cert.pem

- name: cleaning csrs
  file:
    dest: "{{ item }}"
    state: absent
  with_items:
    - "{{ client_csr.dest }}"
    - "{{ server_csr.filename }}"

- name: securing private keys
  file:
    dest: "{{ item }}"
    mode: 0400
  with_items:
    - "{{ ca_key.filename }}"
    - "{{ server_key.filename }}"

- name: securing certificates
  file:
    dest: "{{ item }}"
    mode: 0444
  with_items:
    - /etc/ssl/certs/docker-server-cert.pem

- name: add systemd dropin file to configure dockerd with TLS
  copy:
    dest: /etc/systemd/system/docker.service.d/10-tls.conf
    content: |
      [Service]
      ExecStart=
      ExecStart=/usr/bin/dockerd --tlsverify --tlscacert=/etc/ssl/ca/docker-ca.pem --tlscert=/etc/ssl/certs/docker-server-cert.pem --tlskey={{ server_key.filename }} -H=0.0.0.0:2376 -H unix:// --live-restore
  notify:
    - reload systemd
    - restart docker

- name: collect client certificate and ca cert
  fetch:
    src:  "{{ item }}"
    dest: "{{ docker_client_tls_path }}"
    flat: yes
  with_items:
    - /etc/ssl/certs/docker-client-cert.pem
    - /etc/ssl/ca/docker-ca.pem

- name: remove client cert
  file:
    dest: /etc/ssl/serts/docker-client-cert.pem
    state: absent
